name: Test Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
      
      - name: List directory contents
        run: |
          dir
          dir .github\workflows
      
      - name: Restore NuGet packages
        run: |
          nuget restore CSTestFramework.sln
          dotnet restore CSTestFramework.sln --force
      
      - name: Build
        run: dotnet build CSTestFramework.sln --configuration Release
      
      - name: Setup Java for Allure
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Allure CommandLine
        run: |
          Invoke-WebRequest -Uri "https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.zip" -OutFile "allure.zip"
          Expand-Archive -Path "allure.zip" -DestinationPath "."
          $env:PATH += ";$(Get-Location)\allure-2.24.0\bin"
          echo "$env:PATH" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      
      - name: Prepare Allure Results Directory
        run: |
          # Create a clean directory for Allure results
          if (Test-Path "allure-results") { 
            Remove-Item -Recurse -Force "allure-results" -ErrorAction SilentlyContinue
          }
          New-Item -ItemType Directory -Path "allure-results" -Force
      
      # Run API tests with separate process
      - name: Run API Tests
        run: |
          dotnet test API.Tests/CSTestFramework.API.Tests.csproj --configuration Release --no-build --logger "console;verbosity=detailed"
        continue-on-error: true
      
      # Wait a moment before running UI tests to ensure resources are released
      - name: Wait before UI tests
        run: Start-Sleep -Seconds 5
      
      # Run UI tests with separate process
      - name: Run UI Tests
        run: |
          dotnet test UI.Tests/CSTestFramework.UI.Tests.csproj --configuration Release --no-build --logger "console;verbosity=detailed"
        continue-on-error: true
      
      # Collect all Allure results
      - name: Collect Allure Results
        run: |
          # Create environment.properties file
          $envProps = @(
            "Browser=Chrome",
            "Browser.Version=latest",
            "Operating.System=$([System.Environment]::OSVersion.ToString())",
            "Framework=CSTestFramework",
            "Language=C#",
            "Base.URL=https://demo.litecart.net/"
          ) -join "`n"
          
          Set-Content -Path "allure-results/environment.properties" -Value $envProps -Encoding UTF8
          
          # Create executor.json
          $executor = @{
            name = "GitHub Actions"
            type = "github"
            reportName = "CSTestFramework Test Report"
            buildOrder = "${{ github.run_number }}"
            buildName = "Build #${{ github.run_number }}"
            buildUrl = "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            reportUrl = "https://kryvokhatko.github.io/github.io/"
          } | ConvertTo-Json
          
          Set-Content -Path "allure-results/executor.json" -Value $executor -Encoding UTF8
          
          # Copy any test results to the allure-results directory
          Get-ChildItem -Path "API.Tests" -Recurse -Filter "allure-results" | 
            ForEach-Object {
              Copy-Item -Path "$($_.FullName)\*" -Destination "allure-results\" -Recurse -Force -ErrorAction SilentlyContinue
            }
            
          Get-ChildItem -Path "UI.Tests" -Recurse -Filter "allure-results" | 
            ForEach-Object {
              Copy-Item -Path "$($_.FullName)\*" -Destination "allure-results\" -Recurse -Force -ErrorAction SilentlyContinue
            }
      
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report
      
      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/
          retention-days: 30
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: allure-report
          branch: gh-pages
          clean: true 